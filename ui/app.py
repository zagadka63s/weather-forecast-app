import streamlit as st
import mysql.connector
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from datetime import datetime, timedelta
from db.config import DB_CONFIG

st.set_page_config(page_title="üå¶Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏", page_icon="üå¶Ô∏è")

st.title("üå¶Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ - –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ —Ç–∞ –ú–∞–π–±—É—Ç–Ω—î")

option = st.selectbox(
    'üîé –í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –ø—Ä–æ–≥–Ω–æ–∑—É:',
    ('–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å', '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–∫', '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 20 —Ä–æ–∫—ñ–≤')
)

def format_temperature(temp):
    if temp <= 5:
        return f"‚ùÑÔ∏è –î—É–∂–µ —Ö–æ–ª–æ–¥–Ω–æ: {temp:.2f}¬∞C"
    elif 5 < temp <= 20:
        return f"üå§Ô∏è –ü–æ–º—ñ—Ä–Ω–æ: {temp:.2f}¬∞C"
    else:
        return f"üî• –°–ø–µ–∫–æ—Ç–Ω–æ: {temp:.2f}¬∞C"

if option == '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å':
    st.header("üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–µ–Ω—å")

    conn = mysql.connector.connect(**DB_CONFIG)
    query = "SELECT datetime, temperature FROM weather_data"
    df = pd.read_sql(query, conn)
    conn.close()

    df['datetime'] = pd.to_datetime(df['datetime'])
    df['day'] = (df['datetime'] - df['datetime'].min()).dt.days
    df = df.sort_values('day')

    X = df['day'].values.reshape(-1, 1)
    y = df['temperature'].values

    model = LinearRegression()
    model.fit(X, y)

    next_day = X[-1][0] + 1
    predicted_temp = model.predict([[next_day]])
    next_date = df['datetime'].max() + timedelta(days=1)

    st.success(f"–î–∞—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑—É: {next_date.strftime('%Y-%m-%d')} ‚Äî {format_temperature(predicted_temp[0])}")
    st.info("–¶–µ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ–¥–µ–ª—ñ –º–∞—à–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è. –¢–æ—á–Ω—ñ—Å—Ç—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –Ω–∞—è–≤–Ω–∏—Ö —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö.")

elif option == '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–∫':
    st.header("üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—ñ–∫")

    conn = mysql.connector.connect(**DB_CONFIG)
    query = "SELECT datetime, temperature FROM weather_data"
    df = pd.read_sql(query, conn)
    conn.close()

    df['datetime'] = pd.to_datetime(df['datetime'])
    df['day_of_year'] = df['datetime'].dt.dayofyear
    df['year'] = df['datetime'].dt.year

    X = df['day_of_year'].values.reshape(-1, 1)
    y = df['temperature'].values

    model = LinearRegression()
    model.fit(X, y)

    today = datetime.now()
    day_of_year = today.timetuple().tm_yday
    next_year_date = today + timedelta(days=365)

    predicted_temp = model.predict([[day_of_year]])

    st.success(f"–î–∞—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑—É: {next_year_date.strftime('%Y-%m-%d')} ‚Äî {format_temperature(predicted_temp[0])}")
    st.info("–ü—Ä–æ–≥–Ω–æ–∑ –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ —Ä—ñ—á–Ω–∏—Ö —Ç—Ä–µ–Ω–¥–∞—Ö —Ç–∞ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—ñ.")

elif option == '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 20 —Ä–æ–∫—ñ–≤':
    st.header("üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 20 —Ä–æ–∫—ñ–≤ –≤–ø–µ—Ä–µ–¥")

    def predict_temperature(year_number=20, global_warming_rate=100, year_cycles=12, temperature_change=15, axial_shift=10):
        x = np.linspace(0, year_number * 2 * np.pi, 365 * year_number)
        global_warming_func = x / global_warming_rate
        year_temp_change = temperature_change * np.sin(x) + global_warming_func + axial_shift
        decage_temp_change = np.sin(x / year_cycles / 2 / np.pi) / 10 + year_temp_change
        day_temp_change = (np.sin(365 * x) / 20 + year_temp_change)
        temp_prediction_func = (year_temp_change + decage_temp_change + day_temp_change) / 3
        return x, temp_prediction_func

    x, temp_prediction_func = predict_temperature()

    min_temp = np.min(temp_prediction_func)
    max_temp = np.max(temp_prediction_func)
    avg_temp = np.mean(temp_prediction_func)

    st.success(f"üìà –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–±—É–¥–æ–≤–∞–Ω–∏–π! –ú—ñ–Ω—ñ–º—É–º: {min_temp:.2f}¬∞C | –°–µ—Ä–µ–¥–Ω—î: {avg_temp:.2f}¬∞C | –ú–∞–∫—Å–∏–º—É–º: {max_temp:.2f}¬∞C")
    st.info("–¶–µ –¥–æ–≤–≥–æ—Å—Ç—Ä–æ–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑, –ø–æ–±—É–¥–æ–≤–∞–Ω–∏–π –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π —Ç–∞ —Ç—Ä–µ–Ω–¥—ñ–≤.")

    fig, ax = plt.subplots(figsize=(12, 6))
    ax.plot(x, temp_prediction_func, label='–ü—Ä–æ–≥–Ω–æ–∑ 20 —Ä–æ–∫—ñ–≤')
    ax.set_xlabel("X (–¥–µ–Ω—å)")
    ax.set_ylabel("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞")
    ax.set_title("–ü—Ä–æ–≥–Ω–æ–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ –Ω–∞ 20 —Ä–æ–∫—ñ–≤ –≤–ø–µ—Ä–µ–¥")
    ax.legend()
    ax.grid(True)
    st.pyplot(fig)
